{"version":3,"sources":["prettier/style.css","PackageDetailView.js","App.js","serviceWorker.js","index.js"],"names":["PackageDetailView","packageInfo","name","version","description","client","createIframeClient","customApi","remixApi","devMode","port","App","prettierSolidity","useState","currentFile","setCurrentFile","printWidth","setPrintWidth","tabWidth","setTabWidth","useTabs","setUseTabs","bracketSpacing","setBracketSpacing","explicitTypes","setExplicitTypes","spacedExp","setSpacedExp","useEffect","subscribeToCurrentFile","onload","fileManager","on","fileName","onClick","call","content","prettified","prettier","format","parser","plugins","setFile","e","parseInt","target","value","URL","createObjectURL","Blob","JSON","stringify","prettierJavascript","type","classNames","disabled","length","event","preventDefault","isLocalhost","Boolean","window","location","hostname","match","register","config","process","navigator","publicUrl","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c612bf3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin","import React from \"react\";\nimport packageInfo from \"../package.json\";\n// import packagePrettierInfo from \"../node_modules/prettier-plugin-solidity/package.json\";\n// import packageRemixInfo from \"../node_modules/remix-plugin/package.json\";\n\nconst PackageDetailView = () => (\n  <div className=\"jumbotron py-3 mb-0\">\n    <h1 className=\"h5\">\n      {packageInfo.name} <small>{packageInfo.version}</small>\n    </h1>\n    <p className=\"lead small\">{packageInfo.description}</p>\n    {\n      //<hr className=\"my-4\" />\n      // <h2 className=\"h6\">Dependencies</h2>\n      // <h3 className=\"h6\">\n      //   {packagePrettierInfo.name} <small>{packagePrettierInfo.version}</small>\n      // </h3>\n      // <h3 className=\"h6\">\n      //   {packageRemixInfo.name} <small>{packageRemixInfo.version}</small>\n      // </h3>\n    }\n  </div>\n);\n\nexport default PackageDetailView;\n","import React, {useState, useEffect} from \"react\";\nimport classNames from \"classnames\";\nimport {createIframeClient, remixApi} from \"remix-plugin\";\nimport \"./prettier/style.css\";\nimport prettier from \"prettier/standalone\";\nimport prettierJavascript from \"prettier/parser-babylon\";\n// import Header from \"./Header\";\nimport PackageDetailView from \"./PackageDetailView\";\n\nconst client = createIframeClient({\n  customApi: remixApi,\n  devMode: {port: 8080}\n});\n\nconst App = () => {\n  const prettierSolidity = import(\n    /* webpackPreload: true */ \"prettier-plugin-solidity\"\n  );\n  const [currentFile, setCurrentFile] = useState(\"\");\n  const [printWidth, setPrintWidth] = useState(80);\n  const [tabWidth, setTabWidth] = useState(4);\n  const [useTabs, setUseTabs] = useState(false);\n  // const [singleQuote, setSingleQuote] = useState(false);\n  const [bracketSpacing, setBracketSpacing] = useState(false);\n  const [explicitTypes, setExplicitTypes] = useState(\"always\");\n  const [spacedExp, setSpacedExp] = useState(false);\n\n  useEffect(() => {\n    const subscribeToCurrentFile = async () => {\n      await client.onload(() => {\n        client.fileManager.on(\"currentFileChanged\", fileName =>\n          setCurrentFile(fileName)\n        );\n      });\n    };\n    subscribeToCurrentFile();\n  }, []);\n\n  const onClick = async () => {\n    const content = await client.call(\"fileManager\", \"getFile\", currentFile);\n    const prettified = prettier.format(content, {\n      parser: \"solidity-parse\",\n      plugins: [prettierSolidity],\n      printWidth,\n      tabWidth,\n      useTabs,\n      bracketSpacing,\n      explicitTypes,\n      spacedExp\n    });\n    client.fileManager.setFile(currentFile, prettified);\n  };\n\n  return (\n    <div className=\"panels-item\">\n      <section className=\"section\">\n        <PackageDetailView />\n      </section>\n      <section className=\"section settings-panel p-2\">\n        <div className=\"button-container\">\n          <form className=\"form-inline\">\n            <ul className=\"list-group list-group-flush\">\n              <div className=\"list-group-item form-group\">\n                <label\n                  className=\"mr-1\"\n                  htmlFor=\"printWidth\"\n                  title=\"The line length where Prettier will try wrap.\"\n                >\n                  --print-width\n                </label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"printWidth\"\n                  value={printWidth}\n                  onChange={e => setPrintWidth(parseInt(e.target.value))}\n                />\n              </div>\n              <div className=\"list-group-item form-group\">\n                <label\n                  className=\"mr-1\"\n                  htmlFor=\"tabWidth\"\n                  title=\"Number of spaces per indentation level.\"\n                >\n                  --tab-width\n                </label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"tabWidth\"\n                  value={tabWidth}\n                  onChange={e => setTabWidth(parseInt(e.target.value))}\n                />\n              </div>\n              <div className=\"list-group-item form-group\">\n                <div className=\"checkbox\">\n                  <label\n                    className=\"form-check-label\"\n                    title=\"Indent with tabs instead of spaces.\"\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id=\"useTabs\"\n                      className=\"form-check-input\"\n                      checked={useTabs}\n                      onChange={() => setUseTabs(!useTabs)}\n                    />\n                    --use-tabs\n                  </label>\n                </div>\n              </div>\n              <div className=\"list-group-item form-group\">\n                <div className=\"checkbox\">\n                  <label\n                    className=\"form-check-label\"\n                    title=\"Do not print spaces between brackets.\"\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id=\"bracketSpacing\"\n                      className=\"form-check-input\"\n                      checked={!bracketSpacing}\n                      onChange={() => setBracketSpacing(!bracketSpacing)}\n                    />\n                    --no-bracket-spacing\n                  </label>\n                </div>\n              </div>\n              <div className=\"list-group-item form-group\">\n                <label\n                  htmlFor=\"explicitTypes\"\n                  title=\"Change when type aliases are used.\"\n                >\n                  --explicit-types\n                </label>\n                <select\n                  className=\"form-control\"\n                  id=\"explicitTypes\"\n                  value={explicitTypes}\n                  onChange={e => setExplicitTypes(e.target.value)}\n                >\n                  <option\n                    value=\"always\"\n                    title=\"Prefer the explicit types `uint256`, `int256`, and `bytes1`.\"\n                  >\n                    Always\n                  </option>\n                  <option\n                    value=\"never\"\n                    title=\"Prefer the type aliases `uint`, `int`, and `byte`.\"\n                  >\n                    Never\n                  </option>\n                  <option\n                    value=\"preserve\"\n                    title=\"Respect the type used by the developer.\"\n                  >\n                    Preserve\n                  </option>\n                </select>\n              </div>\n              <div className=\"list-group-item form-group\">\n                <div className=\"checkbox\">\n                  <label className=\"form-check-label\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"spacedExp\"\n                      className=\"form-check-input\"\n                      checked={spacedExp}\n                      onChange={() => setSpacedExp(!spacedExp)}\n                    />\n                    --spaced-exp\n                  </label>\n                </div>\n              </div>\n              <div className=\"list-group-item form-group\">\n                <a\n                  title=\"To use in your projects.\"\n                  className=\"btn btn-primary btn-block\"\n                  href={URL.createObjectURL(\n                    new Blob(\n                      [\n                        prettier.format(\n                          `// https://prettier.io/docs/en/configuration.html\nmodule.exports = {\n  // Global configuration\n  printWidth: ${JSON.stringify(printWidth)},\n  tabWidth: ${JSON.stringify(tabWidth)},\n  useTabs: ${JSON.stringify(useTabs)},\n  // Common configuration\n  bracketSpacing: ${JSON.stringify(bracketSpacing)},\n  // Solidity configuration\n  explicitTypes: ${JSON.stringify(explicitTypes)},\n  spacedExp: ${JSON.stringify(spacedExp)}\n}`,\n                          {parser: \"babel\", plugins: [prettierJavascript]}\n                        )\n                      ],\n                      {\n                        type: \"application/javascript\"\n                      }\n                    )\n                  )}\n                  download=\"prettier.config.js\"\n                >\n                  <span>Download configuration</span>\n                </a>\n              </div>\n              <div className=\"list-group-item form-group\">\n                <button\n                  title=\"Prettify\"\n                  className={classNames(\"btn\", \"btn-primary\", \"btn-block\", {\n                    disabled: currentFile.length === 0\n                  })}\n                  onClick={event => {\n                    event.preventDefault();\n                    onClick();\n                  }}\n                  disabled={currentFile.length === 0}\n                >\n                  <span>\n                    <span className=\"icon-prettier\" /> Prettify{\" \"}\n                    {currentFile.length ? currentFile : \"<no file selected>\"}\n                  </span>\n                </button>\n              </div>\n            </ul>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}